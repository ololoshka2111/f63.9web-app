<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>F 63.9</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        /* ... –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç–∏–ª–∏ ... */

        .admin-controls {
            display: flex;
            gap: 10px;
            margin-top: 10px;
            width: 100%;
        }
        .edit-btn {
            background: #ffc107 !important;
            color: #000 !important;
        }
        .delete-btn {
            background: #dc3545 !important;
        }
        .admin-mode-btn {
            background: #6c757d !important;
        }
    </style>
</head>
<body>
    <!-- –û—Å—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π -->

    <script>
        const BOT_TOKEN = '–í–ê–®_BOT_TOKEN';
        const ADMIN_CHAT_ID = '–í–ê–®_CHAT_ID';
        let products = JSON.parse(localStorage.getItem('products')) || [];
        let cart = [];
        let lastOrderTime = 0;
        let currentCategory = 'all';
        let editMode = false;
        let currentEditProductId = null;

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        function init() {
            Telegram.WebApp.ready();
            Telegram.WebApp.expand();
            
            // –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('admin')) {
                toggleEditMode();
                document.getElementById('categories').innerHTML += `
                    <button class="category-btn admin-mode-btn" onclick="toggleEditMode()">
                        ${editMode ? '–ó–∞–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' : '–†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'}
                    </button>`;
            }
            
            renderProducts();
        }

        // –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        function toggleEditMode() {
            editMode = !editMode;
            renderProducts();
            document.querySelector('.add-product-btn').style.display = 
                editMode ? 'none' : 'flex';
        }

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        function renderProducts() {
            const productGrid = document.getElementById('productGrid');
            const filteredProducts = currentCategory === 'all' ? 
                products : 
                products.filter(p => p.category === currentCategory);
            
            productGrid.innerHTML = filteredProducts.map(product => `
                <div class="product-card" id="product${product.id}">
                    ${editMode ? `
                    <div class="admin-controls">
                        <button class="edit-btn" onclick="openEditForm('${product.id}')">‚úèÔ∏è</button>
                        <button class="delete-btn" onclick="deleteProduct('${product.id}')">üóëÔ∏è</button>
                    </div>` : ''}
                    <img src="${product.image}" class="product-image" alt="${product.name}">
                    <h3>${product.name}</h3>
                    <p>${product.description}</p>
                    <p class="price">${(product.price/100).toLocaleString('ru-RU')} ‚ÇΩ</p>
                    <button onclick="addToCart('product${product.id}')">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                </div>
            `).join('');
        }

        // –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        function openEditForm(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;

            currentEditProductId = productId;
            const form = document.getElementById('adminPanel').querySelector('form');
            form.elements[0].value = product.category;
            form.elements[1].value = product.name;
            form.elements[2].value = product.description;
            form.elements[3].value = product.price/100;
            
            document.getElementById('adminPanel').querySelector('h3').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä';
            document.getElementById('adminPanel').querySelector('button[type="submit"]').textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å';
            
            showAdminPanel();
        }

        // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        function deleteProduct(productId) {
            if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?')) {
                products = products.filter(p => p.id !== productId);
                localStorage.setItem('products', JSON.stringify(products));
                renderProducts();
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
        function addNewProduct(event) {
            event.preventDefault();
            const form = event.target;
            const [categorySelect, nameInput, descInput, priceInput, fileInput] = form.elements;
            
            const reader = new FileReader();
            reader.onload = function(e) {
                const productData = {
                    id: currentEditProductId || Date.now(),
                    category: categorySelect.value,
                    name: nameInput.value,
                    description: descInput.value,
                    price: parseInt(priceInput.value) * 100,
                    image: e.target.result
                };

                if (currentEditProductId) {
                    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
                    const index = products.findIndex(p => p.id === currentEditProductId);
                    products[index] = productData;
                } else {
                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                    products.push(productData);
                }

                localStorage.setItem('products', JSON.stringify(products));
                renderProducts();
                hideAdminPanel();
                form.reset();
                currentEditProductId = null;
                document.getElementById('adminPanel').querySelector('h3').textContent = '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä';
                document.getElementById('adminPanel').querySelector('button[type="submit"]').textContent = '–î–æ–±–∞–≤–∏—Ç—å';
            };

            if (fileInput.files[0]) {
                reader.readAsDataURL(fileInput.files[0]);
            } else if (currentEditProductId) {
                // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
                const oldProduct = products.find(p => p.id === currentEditProductId);
                reader.onload({ target: { result: oldProduct.image } });
            } else {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞');
            }
        }

        // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        // ... (showCategory, addToCart, updateCart, openCart, closeCart, checkout)

        init();
    </script>
</body>
</html>
